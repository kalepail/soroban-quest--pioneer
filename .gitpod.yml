# We specify that we'll pull in our cutom Docker setup from this file.
image:
  file: .gitpod.Dockerfile

# These are the tasks that are run during the Gitpod setup. Each of the tasks
# included will open its own terminal window where it can run.
tasks:
  - name: "Albedo Signer"
    init: |
      cd _squirtle
      npm run compile
    command: |
      cd _squirtle
      npm run package
      cd ../_client
      clear
      npm run start
  # This "Futurenet" task starts up a Stellar validator node and joins it to the
  # futurenet for you.
  - name: Futurenet
    # During the "init" phase, docker will download the quickstart image.
    init: |
      docker pull stellar/quickstart:soroban-dev
    # We enable a local JSON-RPC endpoint that will listen on port 8000.
    command: |
      docker run --rm -it \
      --name stellar \
      -p 8000:8000 \
      stellar/quickstart:soroban-dev \
      --futurenet \
      --enable-soroban-rpc
  # This "CLI - Futurenet" task opens a terminal for you to interact with the
  # futurenet network.
  - name: CLI - Futurenet
    # We specify some required environment variables for use on the futurenet.
    env:
      # This might should be set by the user.
      # This account must actually exist as a funded account on the futurenet.
      SOROBAN_SECRET_KEY: SDUOO3L7CNFXNNWSRSUCEJDKY5CLBZRI23UF6ZNXD23W5NGKJWVMGR7O
      SOROBAN_RPC_URL: "http://localhost:8000/soroban/rpc"
      SOROBAN_NETWORK_PASSPHRASE: "Test SDF Future Network ; October 2022"
    # To keep things tidy, we clear the terminal from the previous output.
    command: |
      source _squirtle/bash-hook
      clear
  # This "CLI - Sandbox" task provides a place to run contracts in a local
  # sandbox environment. We need to invoke `cargo fetch` several times /shrug.
  - name: CLI - Sandbox
    init: |
      cargo clean
      cargo fetch
      make build
      cargo test -p soroban-hello-world-contract
    # We open the `README.md` file and then clear the terminal output.
    command: |
      gp open README.md
      clear

# We can even specify which VS Code extensions should be installed in your
# Gitpod at startup. Wild!
vscode:
  extensions:
    - vadimcn.vscode-lldb
    - rust-lang.rust-analyzer

# We have our Gitpod's "prebuild" continuously built so you can always have the
# freshest experience possible. I bet you can guess what most of these options
# do, so we won't dwell here.
github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: true
    addCheck: false
    addComment: false
    addBadge: true

# We have a couple ports open in your Gitpod workspace to facilitate the quest
# functionality we need.
ports:
  # Your quickstart node has a Horizon API server and an RPC endpoint, both
  # listening on port 8000. It's publicly accessible through the internet.
  - name: Futurenet
    port: 8000
    visibility: public
    onOpen: ignore
  # This port is open to facilitate interactions using our SQ cli.
  - name: Albedo Signer
    port: 3000
    visibility: public
    onOpen: ignore
  # This port is open for "Something with cargo test I think"??
  - port: 4226
    visibility: private
    onOpen: ignore
